@inject IHttpContextAccessor HttpContextAccessor;

@{
    string layoutMode = HttpContextAccessor.HttpContext.Request.Cookies["layoutMode"] ?? "light";
}
<!doctype html>
<html lang="en" data-layout="vertical"
      data-topbar="@layoutMode"
      data-layout-mode="@layoutMode"
      data-sidebar="@layoutMode"
      data-sidebar-size="lg"
      data-sidebar-image="none"
      data-preloader="disable"
      data-theme="default"
      data-theme-colors="default"
      data-sidebar-visibility="show"
      data-layout-style="default"
      data-bs-theme="dark"
      data-layout-width="fluid"
      data-layout-position="fixed"
      data-body-image="none">
<head>
    @Html.Partial("~/Views/Shared/_title_meta.cshtml")
    @RenderSection("styles", required: false)
    @Html.Partial("~/Views/Shared/_head_css.cshtml")
</head>
<body>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow-lg rounded-4 overflow-hidden">
                <div class="modal-header p-2" style="background: linear-gradient(135deg, #ff6b6b, #ff4757);">
                    <h5 class="modal-title text-white d-flex align-items-center fs-5">
                        <i class="ri-alert-line fs-4 me-2"></i> Confirm Deletion
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body text-center py-3 bg-light">
                    <i class="ri-delete-bin-line text-danger fs-2 mb-2"></i>
                    <p id="deleteModalBody" class="fs-6 fw-medium text-dark mb-0">
                        Are you sure you want to delete this item? <br>
                        <span class="text-danger fw-bold">This action cannot be undone!</span>
                    </p>
                </div>
                <div class="modal-footer justify-content-center py-2 pb-4 bg-light border-0">
                    <button type="button" class="btn btn-outline-secondary btn-sm px-3 rounded-pill" data-bs-dismiss="modal">
                        <i class="ri-close-line me-1"></i> Cancel
                    </button>
                    <button type="button" id="confirmDeleteBtn" class="btn btn-danger btn-sm px-4 rounded-pill">
                        <i class="ri-delete-bin-6-line me-1"></i> Delete
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div id="layout-wrapper">
        @Html.Partial("~/Views/Shared/_menu.cshtml")

        <div class="main-content">
            <div class="page-content">
                <div class="container-fluid">

                    @Html.Partial("~/Views/Shared/_page_title.cshtml")

                    <!-- ===== Loader Overlay for RenderBody only ===== -->
                    <div id="body-loader" class="loader-hidden">
                        <div class="loader-overlay">
                            <div class="modern-loader">
                                <div class="loader-ring"></div>
                                <div class="loader-text">Loading...</div>
                            </div>
                        </div>
                    </div>

                    <div id="body-content">
                        @RenderBody()
                    </div>

                </div>
            </div>
            @Html.Partial("~/Views/Shared/_footer.cshtml")
        </div>
    </div>

    <style>
        /* Loader Overlay Styles */
        .loader-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.1); /* very light overlay */
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            backdrop-filter: blur(2px);
        }

        .modern-loader {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px;
        }

        .loader-ring {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: 4px solid rgba(0,0,0,0.1);
            border-top-color: #0d6efd;
            animation: spin 0.8s linear infinite;
            box-shadow: 0 0 10px rgba(13, 110, 253, 0.2);
        }

        .loader-text {
            font-family: "Inter", sans-serif;
            font-size: 14px;
            color: #333;
            font-weight: 500;
        }

        @@keyframes spin {
            to

        {
            transform: rotate(360deg);
        }

        }

        #body-loader {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.25s ease-in-out;
        }

            #body-loader.active {
                opacity: 1;
                pointer-events: all;
            }

        .loader-hidden {
            display: none;
        }

        #body-content {
            position: relative; /* required for overlay */
        }
    </style>

    @Html.Partial("~/Views/Shared/_vendor_scripts.cshtml")
    <script src="~/assets/js/app.js" asp-append-version="true"></script>
    <script src="~/assets/js/pages/notifications.init.js" asp-append-version="true"></script>
    <script src="~/assets/js/pages/modal.init.js" asp-append-version="true"></script>
    <script src="~/assets/js/pages/form-validation.init.js"></script>
    <script src="~/assets/js/pages/password-addon.init.js"></script>

    <script>
        (function () {
            const loader = document.getElementById('body-loader');
            loader.classList.add('loader-hidden');

            let submitLoaderTimer;

            $.ajaxSetup({
                beforeSend: function(xhr, settings) {
                    if (settings.noLoader) xhr.noLoader = true;
                }
            });
            // ---------------- Form submission loader ----------------
            document.addEventListener('submit', function (e) {
                const form = e.target;
                if (form.classList.contains('no-loader')) return;

                clearTimeout(submitLoaderTimer);

                // Delay showing loader (200ms)
                submitLoaderTimer = setTimeout(() => {
                    let isValid = true;

                    if (form.checkValidity && !form.checkValidity()) isValid = false;
                    if (window.jQuery && $(form).valid && !$(form).valid()) isValid = false;

                    if (isValid) {
                        loader.classList.remove('loader-hidden');
                        loader.classList.add('active');
                    }
                },200);
            });

            // Cancel loader immediately if validation fails
            document.addEventListener('invalid', function (e) {
                clearTimeout(submitLoaderTimer);
                loader.classList.remove('active');
                loader.classList.add('loader-hidden');
            }, true);

            // ---------------- Navigation and link clicks ----------------
            window.addEventListener('beforeunload', () => {
                loader.classList.remove('loader-hidden');
                loader.classList.add('active');
            });

            document.addEventListener('click', function (e) {
                const el = e.target.closest('a');
                if (!el) return;
                const href = el.getAttribute('href');
                if (!href || href.startsWith('#') || href.startsWith('javascript:')) return;
                if (el.target === '_blank' || el.hasAttribute('download') || el.classList.contains('no-loader')) return;

                loader.classList.remove('loader-hidden');
                loader.classList.add('active');
            });
             
            // ---------------- jQuery AJAX loader ----------------
            if (window.jQuery) {
               let ajaxTimer;
                  
                $(document).ajaxSend(function(event, jqXHR, settings) {
                    // Only show loader if skipLoader is NOT true
                    if (!settings.skipLoader) {
                        clearTimeout(ajaxTimer);
                        ajaxTimer = setTimeout(() => {
                            loader.classList.remove('loader-hidden');
                            loader.classList.add('active');
                        }, 150); 
                    }
                });

                $(document).ajaxStop(function() {
                    clearTimeout(ajaxTimer);
                    loader.classList.remove('active');
                    loader.classList.add('loader-hidden')
                });

                $(document).ajaxError(function() {
                    clearTimeout(ajaxTimer);
                    loader.classList.remove('active');
                    loader.classList.add('loader-hidden')
                });
            }
        })();
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
